#################################################################################################################
# Reference
#    https://github.com/floydhub/dl-docker/blob/master/Dockerfile.gpu
#################################################################################################################
FROM nvidia/cuda:8.0-cudnn5-devel

#################################################################################################################
#           ENV Setting
#################################################################################################################
ARG THEANO_VERSION=rel-0.8.2
ARG TENSORFLOW_VERSION=0.8.0
ARG TENSORFLOW_ARCH=gpu
ARG KERAS_VERSION=1.0.3
ARG LASAGNE_VERSION=v0.1
ARG TORCH_VERSION=latest
ARG CAFFE_VERSION=master

#################################################################################################################
#           Initial Setting
#################################################################################################################

# Install some dependencies
RUN apt-get update && apt-get install -y \
		bc \
		build-essential \
		cmake \
		curl \
		g++ \
		gfortran \
		git \
		libffi-dev \
		libfreetype6-dev \
		libhdf5-dev \
		libjpeg-dev \
		liblcms2-dev \
		libopenblas-dev \
		liblapack-dev
RUN apt-get update && apt-get install -y \
		#libopenjpeg2 \
		libpng12-dev \
		libssl-dev \
		libtiff5-dev \
		libwebp-dev \
		libzmq3-dev \
		nano \
		pkg-config \
		python-dev \
		software-properties-common \
		unzip \
		vim \
		wget \
		zlib1g-dev \
		&& \
	apt-get clean && \
	apt-get autoremove && \
	rm -rf /var/lib/apt/lists/* && \
# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)
	update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3

#################################################################################################################
#           Python Setting
#################################################################################################################
# Install pip
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
	python get-pip.py && \
	rm get-pip.py

# Add SNI support to Python
RUN pip --no-cache-dir install \
		pyopenssl \
		ndg-httpsclient \
		pyasn1

# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary
# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)
RUN apt-get update && apt-get install -y \
		python-numpy \
		python-scipy \
		python-nose \
		python-h5py \
		python-skimage \
		python-matplotlib \
		python-pandas \
		python-sklearn \
		python-sympy \
		&& \
	apt-get clean && \
	apt-get autoremove && \
	rm -rf /var/lib/apt/lists/*

# Install other useful Python packages using pip
RUN pip --no-cache-dir install --upgrade ipython && \
	pip --no-cache-dir install \
		Cython \
		ipykernel \
		jupyter \
		path.py \
		Pillow \
		pygments \
		six \
		sphinx \
		wheel \
		zmq \
		&& \
	python -m ipykernel.kernelspec

#################################################################################################################
#           User Setting
#################################################################################################################
ENV NB_USER keras
ENV NB_UID 1000

RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    mkdir -p /src && \
    chown keras /src

#################################################################################################################
#           OpenCV Setting
#################################################################################################################
RUN apt-get update && apt-get install -y python-opencv
#################################################################################################################
#           PyTest Setting
#################################################################################################################
RUN pip install -U pytest
#################################################################################################################
#           Notebook Setting
#################################################################################################################

# Set up notebook config
COPY template/python/jupyter_notebook_config.py /src/.jupyter/

# Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062
COPY shell/run_jupyter.sh /src/


# Expose Ports for TensorBoard (6006), Ipython (8888)
EXPOSE 6006 8888

ADD keras /src/keras
ADD template/matplotlibrc /etc/matplotlibrc
RUN chmod -R 777 /src/keras
WORKDIR /src/
USER keras

CMD jupyter notebook --port=8888 --ip=0.0.0.0


