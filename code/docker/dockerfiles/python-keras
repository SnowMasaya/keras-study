#################################################################################################################
# Reference
#     https://hub.docker.com/r/lefant/python3-keras/~/dockerfile/
#################################################################################################################

FROM nvidia/cuda:8.0-cudnn5-devel

#################################################################################################################
#           Initial Setting
#################################################################################################################
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8 ENV PYTHONUNBUFFERED 1
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
        build-essential \
        curl \
        git \
        make \
        wget \
        python3-dev \
        python3-setuptools \
        python3-wheel \
        gfortran \
        graphviz \
        libagg-dev \
        libatlas-dev \
        libffi-dev \
        libfreetype6-dev \
        libhdf5-dev \
        liblapack-dev \
        libncurses5-dev \
        libopenblas-dev \
        libpng12-dev \
        libxft-dev \
        libxml2-dev \
        libxslt-dev \
        libblas-dev \
        libprotobuf-dev \
        libncurses-dev \
        swig \
        zlib1g-dev \
        ttf-bitstream-vera && \
    apt-get clean

#################################################################################################################
#           Python Setting
#################################################################################################################

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    rm get-pip.py
# must be installed before scikit-learn RUN pip3 install numpy
RUN pip3 install numpy
RUN pip3 install scipy
ADD requirements.txt /tmp/requirements.txt
RUN pip3 install -r /tmp/requirements.txt
#################################################################################################################
#           Opencv Setting
#################################################################################################################
RUN apt-get install -y cmake libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
RUN mkdir OpenCV-tmp && \
    cd OpenCV-tmp && \
    git clone https://github.com/Itseez/opencv.git && \
    cd opencv && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local . && \
    make clean && \
    make && \
    make install
#################################################################################################################
#           Machine Learning Setting
#################################################################################################################
RUN pip3 install --upgrade git+git://github.com/lefant/scikit-optimize.git
RUN pip3 install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-0.12.0rc0-cp35-cp35m-linux_x86_64.whl
RUN pip3 install git+git://github.com/Theano/Theano.git
RUN pip3 install keras
RUN pip3 install kerasmodelzoo

#################################################################################################################
#           User Setting
#################################################################################################################
ENV NB_USER keras
ENV NB_UID 1000

RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    mkdir -p $CONDA_DIR && \
    chown keras $CONDA_DIR -R && \
    mkdir -p /src && \
    chown keras /src

USER keras

#################################################################################################################
#           Jupyter Setting
#################################################################################################################

ADD keras /src/keras
WORKDIR /src

EXPOSE 8888

CMD jupyter notebook --port=8888 --ip=0.0.0.0
